@D:\oracle\ora92\sqlplus\demo\demodrop.sql
@D:\oracle\ora92\sqlplus\demo\demobld.sql

--***************************
--sql commnds

select * from dept;

select * from emp;

select * from bonus;

--********************

--sql+ commnds

set the environment  
set serveroutput on;
set serveroutput off;
set linesize 180;
set pagesize 180;

--********************

SELECT 
	empno,
	ename,
	sal
FROM	emp;

--***********************
--Alies creation  (different name for same entity)

SELECT 
	empno as "Employee Number",
	ename as EmployeeName,
	sal as Salary
FROM	emp;

SELECT 
	e.empno,
	e.ename,
	e.sal
FROM	emp e;

--*************************************

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal > 1500;


SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal > 1500 and deptno = 20;



SELECT 
	empno,
	ename,
	deptno,
	sal
FROM	emp
WHERE sal > 1500 OR deptno = 20;

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE NOT (sal > 1500 OR deptno = 20);

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal = 1500 OR sal = 2500 OR sal = 3500;

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal = (1500,2500,3500);            --ERROR

--***********************************************

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal IN (1500,2500,3500);	--NO ERROR

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal NOT IN (1500,2500,3500);		--REVERSE OF IN


SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal >= 1500 AND sal <= 3500;

--********************************************************

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal BETWEEN 1500 AND 3000;			//both 1500 & 3000 are considered

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal NOT BETWEEN 1500 AND 3000;			//both 1500 & 3000 are not considered

*******************************************************

SELECT 
	empno,
	ename,
	comm,
	sal
FROM	emp
WHERE comm IS NULL;

SELECT 
	empno,
	ename,
	comm,
	sal
FROM	emp
WHERE comm IS NOT NULL;


***********************************************************************

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename= 'alien';		--CASE SENSITIVE NO OUTPUT

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename= "alien";		--error


SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename= 'ALLEN';		--NO ERROR


SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename= "ALLEN";		--ERROR INVALID

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename= ALLEN;		--ERROR INVALID IDENTIFIER

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE 'ALLEN' = ename;			--NO ERROR

**********************************************************************

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE 'A%';


SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename NOT LIKE 'A%';

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE '%A%';

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE '__L%';

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE '_I%E_';

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE '__L%L__';

SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE ename LIKE '__LL%';



SELECT
	staff_name
FROM
	staff_masters
WHERE
	staff_name
LIKE	'%\_%' ESCAPE('\');          --///to search "_" in string


--*****************************

SELECT 
	empno,
	ename,
	sal + sal*0.4
FROM	emp;


SELECT 
	empno,
	ename,
	sal + deptno
FROM	emp;				--it will add sal+dept entry but it is illogical
  
SELECT 
	empno,
	ename,
	sal,
	comm
FROM	emp;


SELECT 
	empno,
	ename,
	sal+comm
FROM	emp;			--null+integer=false

/*
     EMPNO ENAME        SAL+COMM
---------- ---------- ----------
      7369 SMITH
      7499 ALLEN            1900
      7521 WARD             1750
      7566 JONES
      7654 MARTIN           2650
      7698 BLAKE
      7782 CLARK
      7788 SCOTT
      7839 KING
      7844 TURNER           1500
      7876 ADAMS
      7900 JAMES
      7902 FORD
      7934 MILLER

14 rows selected.
*/

SELECT 
	empno,
	ename,
	sal+ nvl(comm,0)
FROM	emp;


/*
     EMPNO ENAME      SAL+NVL(COMM,0)
    ---------- ---------- ---------------
      7369 SMITH                  800
      7499 ALLEN                 1900
      7521 WARD                  1750
      7566 JONES                 2975
      7654 MARTIN                2650
      7698 BLAKE                 2850
      7782 CLARK                 2450
      7788 SCOTT                 3000
      7839 KING                  5000
      7844 TURNER                1500
      7876 ADAMS                 1100
      7900 JAMES                  950
      7902 FORD                  3000
      7934 MILLER                1300

14 rows selected.
*/
--***************************************************
order by.......



SELECT 
	empno,
	ename,
	sal
FROM	emp
WHERE sal >= 1500
ORDER BY ename;

/*
     EMPNO ENAME             SAL
---------- ---------- ----------
      7499 ALLEN            1600
      7698 BLAKE            2850
      7782 CLARK            2450
      7902 FORD             3000
      7566 JONES            2975
      7839 KING             5000
      7788 SCOTT            3000
      7844 TURNER           1500
*/

SELECT 
	empno,
 	ename,
 	sal
FROM emp
WHERE sal >= 1500
ORDER BY ename desc;			//-----DESCENDING ORDER SORTING

/*
    EMPNO ENAME             SAL
--------- ---------- ----------
     7844 TURNER           1500
     7788 SCOTT            3000
     7839 KING             5000
     7566 JONES            2975
     7902 FORD             3000
     7782 CLARK            2450
     7698 BLAKE            2850
     7499 ALLEN            1600
*/

SELECT 
 	empno,
 	ename,
	sal,
	deptno
FROM emp
WHERE sal >= 1500
ORDER BY deptno;



SELECT 
 	empno,
 	ename,
	sal,
	deptno
FROM emp
WHERE sal >= 1500
ORDER BY deptno,ename;

     EMPNO ENAME             SAL     DEPTNO
---------- ---------- ---------- ----------
      7782 CLARK            2450         10
      7839 KING             5000         10
      7902 FORD             3000         20
      7566 JONES            2975         20
      7788 SCOTT            3000         20
      7499 ALLEN            1600         30
      7698 BLAKE            2850         30
      7844 TURNER           1500         30
      7325 SWAPNIL          2300         99

9 rows selected.


SELECT 
	empno,
	ename,
	sal,
	deptno
FROM emp
WHERE sal >= 1500
ORDER BY deptno desc,ename asc;



SELECT
	empno,
 	ename,
	sal,
	deptno
FROM emp
WHERE sal >= 1500
ORDER BY deptno desc,ename desc;


--****************************************
--AGGREGATE/ GROUP/MULTIROW FUNCTIONS

SELECT
	MIN(sal)	
FROM emp;

SELECT
	AVG(sal)	
FROM emp;




SELECT
	COUNT(sal)	
FROM emp;





SELECT
	AVG(ename)	
FROM emp;			--ERROR



SELECT
	COUNT(comm)	
FROM emp;




SELECT
	MIN(comm)	
FROM emp;




SELECT
	MAX(comm)	
FROM emp;



SELECT
	AVG(comm)	
FROM emp;




SELECT
	COUNT(*)			--ALL ROWS N COLUMNS ARE CONSIDER
FROM emp;



SELECT
	COUNT(1)	
FROM emp;



SELECT
	MIN(sal),deptno	
FROM emp;				-- *ERROR at line 2:ORA-00937: not a single-group group function



SELECT
	MIN(sal),MAX(deptno)	
FROM emp;

SELECT
	MIN(sal),deptno
FROM emp
ORDER BY deptno;				----error   grouping required

--*****************************************************************			

SELECT
	MIN(sal),deptno	
FROM emp
GROUP BY deptno;

/*

 MIN(SAL)     DEPTNO
--------- ----------
     1300         10
      800         20
      950         30

*/

---VV IMP

SELECT
	MIN(sal),job,deptno	
FROM emp
GROUP BY job,deptno
ORDER BY job;

-- first group by job then deptno then calculate min salary then order by job(asc order)

SQL> SELECT
  2   MIN(sal),job,deptno 
  3  FROM emp
  4  GROUP BY job,deptno
  5  ORDER BY job;

  MIN(SAL) JOB           DEPTNO
---------- --------- ----------
      3000 ANALYST           20
      1300 CLERK             10
       800 CLERK             20
       950 CLERK             30
      2450 MANAGER           10
      2975 MANAGER           20
      2850 MANAGER           30
      5000 PRESIDENT         10
      2300 PRESIDENT         99
      1250 SALESMAN          30

10 rows selected.




SELECT
	MIN(sal),deptno	
FROM	emp
WHERE 	MIN(sal)>1000
GROUP 	BY deptno
ORDER	BY MIN(sal);		--ERROR  group function is not allowed here


SELECT
	MIN(sal),deptno	
FROM emp
HAVING MIN(sal)>1000
GROUP BY deptno
ORDER BY MIN(sal);	

SELECT
	AVG(sal),job	
FROM emp
WHERE deptno=20
HAVING AVG(sal)>=1000
GROUP BY job
ORDER BY avg(sal);

SELECT
	staff_code,
	staff_name,
	design_code,
	dept_code,
	hiredate,
	staff_dob,
	staff_address,
	mgr_code,
	staff_sal
FROM
	staff_masters
WHERE
	staff_name
LIKE	('A%S')
OR	('_N%')
OR	('__N%N')
OR	('%S');
ORDER BY MIN(sal);			---error invalid	


--***************************************


