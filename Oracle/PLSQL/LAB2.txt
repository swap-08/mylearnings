QUERY2.3

DECLARE
V_BONUS STAFF_MASTERS.STAFF_SAL%TYPE;
V_SAL STAFF_MASTERS.STAFF_SAL%TYPE;

BEGIN
SELECT STAFF_SAL INTO V_SAL
FROM STAFF_MASTERS
WHERE MGR_CODE=10;

V_BONUS:=2*V_SAL;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS'||V_SAL);
DBMS_OUTPUT.PUT_LINE('STAFF BONUS IS'||V_BONUS);

EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('GIVEN CODE IS NOT VALID.ENTER VALID CODE');
END;
/

SQL> DECLARE
  2  V_BONUS STAFF_MASTERS.STAFF_SAL%TYPE;
  3  V_SAL STAFF_MASTERS.STAFF_SAL%TYPE;
  4  
  5  BEGIN
  6  SELECT STAFF_SAL INTO V_SAL
  7  FROM STAFF_MASTERS
  8  WHERE MGR_CODE=10;
  9  
 10  V_BONUS:=2*V_SAL;
 11  DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS'||V_SAL);
 12  DBMS_OUTPUT.PUT_LINE('STAFF BONUS IS'||V_BONUS);
 13  
 14  EXCEPTION
 15  WHEN NO_DATA_FOUND THEN
 16  DBMS_OUTPUT.PUT_LINE('GIVEN CODE IS NOT VALID.ENTER VALID CODE');
 17  END;
 18  /
GIVEN CODE IS NOT VALID.ENTER VALID CODE

PL/SQL procedure successfully completed.

----------------------------------------------------------------------------------------------
query2.4


BEGIN
	DECLARE
	FNAME EMP.ENAME%TYPE;
	BEGIN
	SELECT ENAME INTO FNAME
	FROM EMP
	WHERE 1=2;

	DBMS_OUTPUT.PUT_LINE('THIS STATEMENT WILL PRINT');
	EXCEPTION
	WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('SOME INNER BLOCK ERROR');
	END;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO DATA FOUND IN FNAME');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SOME OUTER BLOCK ERROR');
END;
/


SQL> BEGIN
  2   DECLARE
  3   FNAME EMP.ENAME%TYPE;
  4   BEGIN
  5   SELECT ENAME INTO FNAME
  6   FROM EMP
  7   WHERE 1=2;
  8  
  9   DBMS_OUTPUT.PUT_LINE('THIS STATEMENT WILL PRINT');
 10   EXCEPTION
 11   WHEN OTHERS THEN
 12   DBMS_OUTPUT.PUT_LINE('SOME INNER BLOCK ERROR');
 13   END;
 14  EXCEPTION
 15  WHEN NO_DATA_FOUND THEN
 16  DBMS_OUTPUT.PUT_LINE('NO DATA FOUND IN FNAME');
 17  
 18  WHEN OTHERS THEN
 19  DBMS_OUTPUT.PUT_LINE('SOME OUTER BLOCK ERROR');
 20  END;
 21  /
SOME INNER BLOCK ERROR

PL/SQL procedure successfully completed.


--------------------------------------------------------------------------
QUERY 2.5


DECLARE
	ENM EMP.ENAME%TYPE;
BEGIN
	SELECT  ENAME INTO ENM FROM EMP WHERE DEPTNO=50;
	
	DECLARE
	FNAME EMP.ENAME%TYPE;
	BEGIN
	SELECT ENAME INTO FNAME
	FROM EMP
	WHERE 1=2;

	DBMS_OUTPUT.PUT_LINE('THIS STATEMENT WILL PRINT');
	EXCEPTION
	WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('SOME INNER BLOCK ERROR');
	END;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO DATA FOUND IN ENAME');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SOME OUTER BLOCK ERROR');
END;
/



SQL> DECLARE
  2   ENM EMP.ENAME%TYPE;
  3  BEGIN
  4   SELECT  ENAME INTO ENM FROM EMP WHERE DEPTNO=50;
  5   
  6   DECLARE
  7   FNAME EMP.ENAME%TYPE;
  8   BEGIN
  9   SELECT ENAME INTO FNAME
 10   FROM EMP
 11   WHERE 1=2;
 12  
 13   DBMS_OUTPUT.PUT_LINE('THIS STATEMENT WILL PRINT');
 14   EXCEPTION
 15   WHEN OTHERS THEN
 16   DBMS_OUTPUT.PUT_LINE('SOME INNER BLOCK ERROR');
 17   END;
 18  EXCEPTION
 19  WHEN NO_DATA_FOUND THEN
 20  DBMS_OUTPUT.PUT_LINE('NO DATA FOUND IN ENAME');
 21  
 22  WHEN OTHERS THEN
 23  DBMS_OUTPUT.PUT_LINE('SOME OUTER BLOCK ERROR');
 24  END;
 25  /
NO DATA FOUND IN ENAME

PL/SQL procedure successfully completed.

----------------------------------------------------------------
QUERY 2.6


DECLARE
	ezero EXCEPTION;
	cm emp.comm%type;
BEGIN
	select comm into cm from emp where empno=7369;
	if cm is NULL 
	then
		RAISE ezero;
	end if;
		DBMS_OUTPUT.PUT_LINE(cm);
EXCEPTION

WHEN ezero THEN
	DBMS_OUTPUT.PUT_LINE('error'||SQLCODE||SQLERRM);
END;
/


SQL> DECLARE
  2   ezero EXCEPTION;
  3   cm emp.comm%type;
  4  BEGIN
  5   select comm into cm from emp where empno=7369;
  6   if cm is NULL 
  7   then
  8    RAISE ezero;
  9   end if;
 10    DBMS_OUTPUT.PUT_LINE(cm);
 11  EXCEPTION
 12  
 13  WHEN ezero THEN
 14   DBMS_OUTPUT.PUT_LINE('error'||SQLCODE||SQLERRM);
 15  END;
 16  /
error1User-Defined Exception

PL/SQL procedure successfully completed.

--------------------------------------------------------------------
query 2.7


declare
	TYPE etable IS TABLE OF temp%ROWTYPE INDEX BY BINARY_INTEGER;
	erow etable;
begin
	erow(10).deptno :=99;
	erow(10).dname :='HR4';
	erow(10).loc :='BANGLORE';
	INSERT INTO dept values erow(10);
end;
/

declare
begin
	drop table temp;
end;
/

<<<error>>>
